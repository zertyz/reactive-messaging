[package]
name          = "reactive-messaging"
version       = "0.4.2"
edition       = "2021"
description   = "Reactive client/server communications, focused on high performance"
keywords      = ["reactive", "event-driven", "socket", "messaging", "transport"]
categories    = ["asynchronous", "concurrency", "rust-patterns", "network-programming"]
readme        = "README.md"
authors       = ["Luiz Silveira <zertyz@gmail.com>"]
homepage      = "https://github.com/zertyz/reactive-messaging"
repository    = "https://github.com/zertyz/reactive-messaging"
documentation = "https://docs.rs/reactive-messaging/"
license       = "Unlicense"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace]

[features]

[dependencies]
tokio             = { version = "1", default-features = false }
log               = { version = "0.4", default-features = false }
reactive-mutiny   = { version = "1.3", default-features = false }      # for reactive programming in Rust
futures           = { version = "0.3", default-features = false }     # brings in "Streams" / async iterators
once_cell         = { version = "1", default-features = false }       # lazy statics

# for the retrying mechanism
keen-retry = { version = "0.5", default-features = false, features = ["async"] }

# to be present only in dev-dependencies, after the refactorings
serde      = { version = "1", default-features = false, features = ["derive"] }                                     # typed serialization / deserialization
ron        = { version = "0.11", default-features = false }                                                          # for textual (de)serialization
rkyv       = { version = "0.7", default-features = false, features = ["std", "size_32", "validation"] }   # for dynamic-sized binary (de)serialization


[dev-dependencies]
ctor          = "0.5"  # setup and teardown for modules
simple_logger = "5"    # a dirty console logger
log           = { version = "0.4", features = ["max_level_trace", "release_max_level_info"] }

tokio         = { version = "1", features = ["full"] }


# dependencies for the examples
###############################

dashmap    = "6"     # atomic hash maps & sets -- to send a shutdown message to clients
rand       = "0.9" # random number


# dependencies for benchmarks
#############################

criterion    = { version = "0.7", features=["html_reports", "async_tokio"] }
tokio-stream = "0.1"
crossbeam    = "0.8"     # scoped threads

[[bench]]
name = "streamable_channels"
harness = false
