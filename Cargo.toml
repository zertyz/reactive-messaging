[package]
name          = "reactive-messaging"
version       = "0.4.0"
edition       = "2021"
description   = "Reactive client/server communications, focused on high performance"
keywords      = ["reactive", "event-driven", "socket", "messaging", "transport"]
categories    = ["asynchronous", "concurrency", "rust-patterns", "network-programming"]
readme        = "README.md"
authors       = ["Luiz Silveira <zertyz@gmail.com>"]
homepage      = "https://github.com/zertyz/reactive-messaging"
repository    = "https://github.com/zertyz/reactive-messaging"
documentation = "https://docs.rs/reactive-messaging/"
license       = "Unlicense"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace]

[features]

[dependencies]
tokio             = "1"
log               = "0.4"
reactive-mutiny   = "1.3.0"             # for reactive programming in Rust
futures           = "0.3"   # brings in "Streams" / async iterators
once_cell         = "1"     # lazy statics

# for the retrying mechanism
keen-retry = "0.5"

# doc-dependencies
ctor       = "0.2"    # setup and teardown for modules


# to be present only in dev-dependencies, after the refactorings
ron        = "0.8"                             # .ron config files
serde      = { version = "1.0", features = ["derive"] }      # typed serialization / deserialization


[dev-dependencies]
ctor          = "0.2"  # setup and teardown for modules
simple_logger = "5"    # a dirty console logger
log           = { version = "0.4", features = ["max_level_trace", "release_max_level_info"] }

tokio         = { version = "1", features = ["full", "rt-multi-thread"] }


# dependencies for the examples
###############################

dashmap    = "6"            # atomic hash maps & sets -- to send a shutdown message to clients
rand       = "0.8"    # random number


# dependencies for benchmarks
#############################

criterion    = { version = "0.5", features=["html_reports"] }
tokio-stream = "0.1"
crossbeam    = "0.8"     # scoped threads

[[bench]]
name = "streamable_channels"
harness = false
